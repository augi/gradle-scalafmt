plugins {
    id 'groovy'
    id 'maven-publish'
    id 'java-gradle-plugin'
    id 'signing'
    id 'io.github.gradle-nexus.publish-plugin' version '1.1.0'
    id 'com.gradle.plugin-publish' version '1.0.0'
}

group 'cz.augi'
version = version == 'unspecified' ? 'DEVELOPER-SNAPSHOT' : version

repositories {
    mavenCentral()
}

dependencies {
    api gradleApi()
    api 'org.scalameta:scalafmt-dynamic_2.13:2.7.5'
    api 'org.scala-lang.modules:scala-xml_2.13:2.1.0'

    testImplementation 'junit:junit:4.13.2'
    testImplementation gradleTestKit()
    testImplementation ('org.spockframework:spock-core:2.1-groovy-3.0') {
        exclude group:'org.codehaus.groovy'
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events 'failed'
        exceptionFormat 'full'
    }
}

sourceCompatibility = JavaVersion.VERSION_1_8

project.ext.set('gradle.publish.key', System.getenv('GRADLE_PORTAL_KEY'))
project.ext.set('gradle.publish.secret', System.getenv('GRADLE_PORTAL_SECRET'))

pluginBundle {
    website = 'https://github.com/augi/gradle-scalafmt'
    vcsUrl = 'https://github.com/augi/gradle-scalafmt'
    tags = ['gradle', 'scala', 'scalafmt']
}

gradlePlugin {
    plugins {
        wartremoverPlugin {
            id = 'cz.augi.gradle.scalafmt'
            displayName = 'Gradle scalafmt plugin'
            description = 'Gradle plugin to apply scalafmt (Scala linting tool)'
            implementationClass = 'cz.augi.gradle.scalafmt.ScalafmtPlugin'
        }
    }
}


java {
    withJavadocJar()
    withSourcesJar()
}

afterEvaluate {
    publishing.publications.forEach {
        it.pom {
            name = 'Gradle scalafmt Plugin'
            description = 'Gradle plugin to apply scalafmt (Scala linting tool)'
            url = 'https://github.com/augi/gradle-scalafmt'
            licenses {
                license {
                    name = 'The MIT License'
                    url = 'http://www.opensource.org/licenses/mit-license.php'
                }
            }
            developers {
                developer {
                    id = 'augi'
                    name = 'Michal August√Ωn'
                    email = 'augustyn.michal@gmail.com'
                }
            }
            scm {
                connection = 'scm:git:git://github.com/augi/gradle-scalafmt.git'
                developerConnection = 'scm:git:ssh://github.com/augi/gradle-scalafmt.git'
                url = 'https://github.com/augi/gradle-scalafmt'
            }
        }
    }
}

signing {
    String base64Key = System.getenv('SIGNING_KEY')
    if (base64Key) {
        useInMemoryPgpKeys(new String(Base64.decoder.decode(base64Key)), System.getenv('SIGNING_PASSWORD'))
        sign publishing.publications
    }
}

nexusPublishing {
    repositories {
        sonatype {
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
        }
    }
}
